{
	"info": {
		"_postman_id": "a120ef52-c2a2-42f8-ae71-9d6a028f1103",
		"name": "StockCar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26784941",
		"_collection_link": "https://interstellar-shuttle-266161.postman.co/workspace/My-Workspace~eedaab32-9ede-4ef1-8a5b-aa806d58a44b/collection/26784941-a120ef52-c2a2-42f8-ae71-9d6a028f1103?action=share&source=collection_link&creator=26784941"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "getVoituresJson(all)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Validate the volume field is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.volume).to.be.a('number', \"Volume should be a number\");",
									"    pm.expect(responseData.volume).to.be.at.least(0, \"Volume should be non-negative\");",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'voitures' array is present and contains at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.voitures).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"",
									"pm.test(\"Each element in the 'voitures' array is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.voitures).to.be.an('array');",
									"    ",
									"    responseData.voitures.forEach(function (voiture) {",
									"        pm.expect(voiture).to.be.a('string').and.to.have.lengthOf.at.least(1);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/get/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"get",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "getVoituresJson(id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.voiture).to.be.a('string'); // La clé \"voiture\" contient une chaîne JSON",
									"    ",
									"    ",
									"    const voitureData = JSON.parse(responseData.voiture);",
									"",
									"    pm.expect(voitureData.id).to.exist.and.to.be.a('number');",
									"    pm.expect(voitureData.marque).to.exist.and.to.be.a('string');",
									"    pm.expect(voitureData.modele).to.exist.and.to.be.a('string');",
									"    pm.expect(voitureData.finition).to.exist.and.to.be.a('string');",
									"    pm.expect(voitureData.carburant).to.exist.and.to.be.a('string');",
									"    pm.expect(voitureData.km).to.exist.and.to.be.a('number');",
									"    pm.expect(voitureData.annee).to.exist.and.to.be.a('number');",
									"    pm.expect(voitureData.prix).to.exist.and.to.be.a('number');",
									"});",
									"",
									"",
									"",
									"pm.test(\"Id is a positive integer\", function () {",
									"  const responseData = pm.response.json();",
									"  const voitureData = JSON.parse(responseData.voiture);",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(voitureData.id).to.exist.and.to.be.a('number').and.to.be.greaterThan(0);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"pm.test(\"voiture is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.voiture).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Model should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/get/60",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"get",
								"60"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getVoituresJson(all/2/12)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Validate the volume field is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.volume).to.be.a('number');",
									"    pm.expect(responseData.volume).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'voitures' array is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.voitures).to.exist;",
									"    pm.expect(responseData.voitures).to.be.an('array');",
									"    pm.expect(responseData.voitures).to.have.lengthOf(12);",
									"});",
									"",
									"",
									"pm.test(\"Each element in the 'voitures' array is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.voitures).to.be.an('array').that.is.not.empty;",
									"    ",
									"    responseData.voitures.forEach(function (voiture) {",
									"        pm.expect(voiture).to.be.a('string').that.is.not.empty;",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/get/all/2/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"get",
								"all",
								"2",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "getVoituresJson(Toyota)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - volume and voitures\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.volume).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.voitures).to.exist.and.to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'volume' field is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.volume).to.be.a('number');",
									"    pm.expect(responseData.volume).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'voitures' field is an array and is not empty\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.voitures).to.be.an('array', \"'voitures' field should be an array\");",
									"  pm.expect(responseData.voitures).to.have.lengthOf.at.least(1, \"'voitures' array should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Each element in the 'voitures' array is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.voitures).to.be.an('array').that.is.not.empty;",
									"  ",
									"  responseData.voitures.forEach(function(voiture) {",
									"    pm.expect(voiture).to.be.a('string').and.to.not.be.empty;",
									"  });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/get/Toyota",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"get",
								"Toyota"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "ajouterVoiture",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the 'succes' field\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.have.property('succes');",
									"});",
									"",
									"",
									"pm.test(\"The value of the 'succes' field is a boolean\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.succes).to.be.a('boolean');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "JSESSIONID=86BB914EBAD3144FCBB3D92563F04C4F; PGADMIN_LANGUAGE=en; frontend_lang=fr_FR; tz=Europe/Berlin; session_id=0f5bbf5f9313a92ea1ef1e3a8d1bc94bb5d25e4c; JSESSIONID=node01sic33peoco0d1pno8ms1ut3f70.node0; JSESSIONID.fc88bfaa=node01lrmz8l3cw2k1thmr3a9nu0kq5.node0; JSESSIONID.4abc22b4=node01g2umqui6gqd7hbfdqufhcxuh0.node0",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"marque\": \"POSTMAN\",\r\n    \"modele\": \"QA\",\r\n    \"finition\": \"TEST\",\r\n    \"carburant\": \"E\",\r\n    \"km\": 9000,\r\n    \"annee\": 2012,\r\n    \"prix\": 22\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/add/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"add",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "supprimerVoiture(id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'succes' field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.succes).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Verify that the value of 'succes' is true\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.succes).to.be.true;",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the response body is not empty\", function () {",
									"    pm.response.to.have.jsonBody();",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "18",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/esieaBack/rest/voiture/del/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"esieaBack",
								"rest",
								"voiture",
								"del",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}